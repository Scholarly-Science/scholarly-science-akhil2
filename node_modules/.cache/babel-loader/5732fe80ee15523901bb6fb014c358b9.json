{"ast":null,"code":"var _jsxFileName = \"/Users/godambe/dhruv1584/internships/scholarly-science-akhil/src/components/dashboard/Company.js\";\nimport React from \"react\";\nimport { Card } from \"./Card\";\nimport Select from \"react-select\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { getAllCompanies } from \"../backend/apiconnector\";\nimport countrydata from \"../../assets/countries.json\";\n\nclass Company extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFilterChange = filter => {\n      localStorage.setItem(\"scholarly-filter\", filter.value);\n      console.log(filter.value);\n      this.setState({\n        filter: filter.value,\n        companies: [],\n        page: 1,\n        loading: true\n      }, () => {\n        this.nextscroll();\n      });\n      console.log(filter);\n    };\n\n    this.state = {\n      status: \"\",\n      companies: [],\n      filter: localStorage.getItem(\"scholarly-filter\") ? localStorage.getItem(\"scholarly-filter\") : \"all\",\n      page: 1,\n      hasMore: true,\n      loading: true,\n      countries: countrydata\n    };\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n    this.nextscroll = this.nextscroll.bind(this);\n    this.companycheck = this.companycheck.bind(this);\n  }\n\n  componentDidMount() {\n    // if(localStorage.getItem(\"scholarly-filter\")){\n    //   this.setState({filter: localStorage.getItem(\"scholarly-filter\")})\n    // }\n    this.nextscroll();\n  }\n\n  shuffleArray(array) {\n    let i = array.length - 1;\n\n    for (; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n\n    return array;\n  }\n\n  companycheck(comp) {\n    var complist = this.state.companies;\n\n    for (let i = 0; i < complist.length; i++) {\n      if (complist[i]._id === comp._id) return true;\n    }\n\n    return false;\n  }\n\n  nextscroll() {\n    getAllCompanies(this.state.page, this.state.filter).then(data => {\n      // console.log(data.companies)\n      var nextPageNumber = data.companies.length < 10 ? this.state.page : this.state.page + 1;\n      var companylist = this.state.companies; // console.log(data.companies.length)\n\n      this.shuffleArray(data.companies).forEach(comp => {\n        if (!this.companycheck(comp)) companylist.push(comp);\n      });\n      this.setState({\n        status: data.status,\n        companies: companylist,\n        hasMore: data.companies.length < 8 ? false : true,\n        page: nextPageNumber,\n        loading: false\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"nav\", {\n      className: \"navbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, \"Companies\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"location-dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      options: this.state.countries,\n      className: \"loc-drop\",\n      value: this.state.filter,\n      onChange: this.handleFilterChange,\n      placeholder: this.state.filter === \"all\" ? \"Select the location..\" : this.state.filter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-content-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n      dataLength: this.state.companies.length,\n      next: this.nextscroll,\n      hasMore: this.state.hasMore,\n      endMessage: /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 19\n        }\n      }, \"Yay! You have seen it all\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"all-cards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, this.state.companies.map(comp => {\n      return /*#__PURE__*/React.createElement(Card, {\n        key: comp._id,\n        comp: comp,\n        loc: this.state.filter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }\n      });\n    })), this.state.hasMore && this.state.companies.length > 0 && /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }\n    }, \"Loading ...\"))))));\n  }\n\n}\n\nexport { Company };","map":{"version":3,"sources":["/Users/godambe/dhruv1584/internships/scholarly-science-akhil/src/components/dashboard/Company.js"],"names":["React","Card","Select","InfiniteScroll","getAllCompanies","countrydata","Company","Component","constructor","props","handleFilterChange","filter","localStorage","setItem","value","console","log","setState","companies","page","loading","nextscroll","state","status","getItem","hasMore","countries","bind","companycheck","componentDidMount","shuffleArray","array","i","length","j","Math","floor","random","temp","comp","complist","_id","then","data","nextPageNumber","companylist","forEach","push","catch","err","render","textAlign","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Card } from \"./Card\";\nimport Select from \"react-select\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { getAllCompanies } from \"../backend/apiconnector\";\n\nimport countrydata from \"../../assets/countries.json\";\n\nclass Company extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: \"\",\n      companies: [],\n      filter: localStorage.getItem(\"scholarly-filter\")\n        ? localStorage.getItem(\"scholarly-filter\")\n        : \"all\",\n      page: 1,\n      hasMore: true,\n      loading: true,\n      countries: countrydata,\n    };\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n    this.nextscroll = this.nextscroll.bind(this);\n    this.companycheck = this.companycheck.bind(this);\n  }\n\n  componentDidMount() {\n    // if(localStorage.getItem(\"scholarly-filter\")){\n    //   this.setState({filter: localStorage.getItem(\"scholarly-filter\")})\n    // }\n    this.nextscroll();\n  }\n\n  handleFilterChange = (filter) => {\n    localStorage.setItem(\"scholarly-filter\", filter.value);\n    console.log(filter.value);\n    this.setState(\n      {\n        filter: filter.value,\n        companies: [],\n        page: 1,\n        loading: true,\n      },\n      () => {\n        this.nextscroll();\n      }\n    );\n    console.log(filter);\n  };\n\n  shuffleArray(array) {\n    let i = array.length - 1;\n    for (; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  }\n\n  companycheck(comp) {\n    var complist = this.state.companies;\n    for (let i = 0; i < complist.length; i++) {\n      if (complist[i]._id === comp._id) return true;\n    }\n    return false;\n  }\n\n  nextscroll() {\n    getAllCompanies(this.state.page, this.state.filter)\n      .then((data) => {\n        // console.log(data.companies)\n        var nextPageNumber =\n          data.companies.length < 10 ? this.state.page : this.state.page + 1;\n        var companylist = this.state.companies;\n        // console.log(data.companies.length)\n        this.shuffleArray(data.companies).forEach((comp) => {\n          if (!this.companycheck(comp)) companylist.push(comp);\n        });\n\n        this.setState({\n          status: data.status,\n          companies: companylist,\n          hasMore: data.companies.length < 8 ? false : true,\n          page: nextPageNumber,\n          loading: false,\n        });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  render() {\n    return (\n      <>\n        <nav className=\"navbar\">\n          <h1>Companies</h1>\n          <div className=\"location-dropdown\">\n            <Select\n              options={this.state.countries}\n              className=\"loc-drop\"\n              value={this.state.filter}\n              onChange={this.handleFilterChange}\n              placeholder={\n                this.state.filter === \"all\"\n                  ? \"Select the location..\"\n                  : this.state.filter\n              }\n            />\n          </div>\n        </nav>\n        <div className=\"main-content-container\">\n          <div className=\"cards\">\n            <InfiniteScroll\n              dataLength={this.state.companies.length}\n              next={this.nextscroll}\n              hasMore={this.state.hasMore}\n              endMessage={\n                <p style={{ textAlign: \"center\" }}>\n                  <b>Yay! You have seen it all</b>\n                </p>\n              }\n            >\n              <div className=\"all-cards\">\n                {this.state.companies.map((comp) => {\n                  return (\n                    <Card key={comp._id} comp={comp} loc={this.state.filter} />\n                  );\n                })}\n              </div>\n              {this.state.hasMore && this.state.companies.length > 0 && (\n                <p style={{ textAlign: \"center\" }}>\n                  <b>Loading ...</b>\n                </p>\n              )}\n            </InfiniteScroll>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\nexport { Company };\n"]},"metadata":{},"sourceType":"module"}