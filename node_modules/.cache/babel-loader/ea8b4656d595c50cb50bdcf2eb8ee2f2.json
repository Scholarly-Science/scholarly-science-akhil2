{"ast":null,"code":"var _jsxFileName = \"/Users/godambe/dhruv1584/internships/scholarly-science-akhil2/src/components/signup/SignUpStudent.js\";\nimport React, { useState } from \"react\"; // import axios from \"axios\";\n\nimport { signUp } from \"../backend/apiconnector\";\nimport VerifyEmail from \"./VerifyEmail\";\nimport { Route } from \"react-router-dom\";\nimport \"./signup.css\";\nimport google from \"../../assets/icons8-google.svg\";\nimport GoogleLogin from \"react-google-login\";\nimport linkedin from \"../../assets/icons8-linkedin.svg\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Dashboard } from \"../dashboard/Dashboard\";\nimport { authenticate, isAuth } from \"../../helpers/auth\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nexport class SignUpStudent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullName: \"\",\n      email: \"\",\n      password: \"\",\n      phone: \"\",\n      country: \"us\",\n      signedup: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.checkcountry = this.checkcountry.bind(this);\n  }\n\n  componentWillMount() {\n    if (localStorage.getItem(\"student-nation.com-tokens\")) {\n      window.location.replace(\"/dashboard/profile\");\n    }\n\n    if (window.localStorage.getItem(\"student-nation.com-activation\")) {\n      var readls = JSON.parse(window.localStorage.getItem(\"student-nation.com-activation\"));\n      this.setState({\n        email: readls.email,\n        signedup: true\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.checkcountry();\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    console.log(this.state);\n    var user = {\n      fullName: this.state.fullName,\n      phone: this.state.phone,\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    signUp = res => {\n      // .then((data) => {\n      //   if (data.status === \"success\") {\n      //     window.localStorage.setItem(\n      //       \"student-nation.com-activation\",\n      //       JSON.stringify({\n      //         email: this.state.email,\n      //         hash: data.tokenhash,\n      //         verified: false,\n      //       })\n      //     );\n      //     this.setState({ signedup: true });\n      //   } else {\n      //     document.getElementById(\"signinerr\").style.display = \"block\";\n      //   }\n      // })\n      const googleresponse = {\n        Name: res.profileObj.name,\n        email: res.profileObj.email,\n        token: res.googleId,\n        ProviderId: \"Google\"\n      };\n      debugger;\n      axios.post(\"http://localhost:5000/api/register\", googleresponse).then(result => {\n        let responseJson = result;\n        sessionStorage.setItem(\"userData\", JSON.stringify(result));\n        this.props.history.push(\"/dashboard\");\n      });\n    }; // .catch((err) => {});\n    // axios.post(`http://localhost:5000/auth/register`,{\n    //     firstName: this.state.firstName,\n    //     lastName: this.state.lastName,\n    //     phone: this.state.phone,\n    //     email: this.state.email,\n    //     password: this.state.password\n    // }).then(res => {\n    //   if(res.data.status === 'success'){\n    //     window.localStorage.setItem(\"scholarlyscience.in-activation\", JSON.stringify({\n    //       email: this.state.email,\n    //       hash: res.data.tokenhash,\n    //       verified: false\n    //     }))\n    //     this.setState({signedup: true})\n    //   }else alert(\"failed\")\n    // }).catch(err => {\n    //   if(err.response.data.error.message==='User Exists'){\n    //     alert('Email Already in Use')\n    //   }\n    // })\n\n  }\n\n  checkcountry() {\n    var cc = \"us\";\n    fetch(\"https://geolocation-db.com/json/\").then(res => res.json()).then(result => {\n      cc = result.country_code.toLowerCase();\n      this.setState({\n        country: cc\n      });\n    });\n  }\n\n  render() {\n    const responseGoogle = response => {\n      console.log(response);\n\n      if (response) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/dashboard\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 16\n          }\n        });\n      }\n\n      var res = response.profileObj;\n      console.log(res);\n      debugger;\n      this.signup(response);\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }\n    }, isAuth() ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/dasboard/homecomponent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main_banner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }), !this.state.signedup ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signup-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, \"Sign up\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"with-google\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(GoogleLogin, {\n      clientId: \"109921130585-au2musc9k240m8e0n55eo4bjecoshd44.apps.googleusercontent.com\",\n      buttonText: \"Sign up with Google\",\n      onSuccess: responseGoogle,\n      onFailure: responseGoogle,\n      cookiePolicy: \"single_host_origin\",\n      height: \"25\",\n      width: \"25\",\n      style: {\n        marginTop: \"0.5rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"with-linkedin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: linkedin,\n      alt: \"linkedin\",\n      height: \"25\",\n      width: \"25\",\n      style: {\n        marginTop: \"0.5rem\",\n        marginRight: \"0.2rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }\n    }, \"Sign up with LinkedIn\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"with-email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }\n    }, \"or sign up with email\")), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"fullname\",\n      className: \"first-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }\n    }, \"Full Name\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"email-input\",\n      value: this.state.fullName,\n      onChange: e => this.setState({\n        fullName: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      className: \"email-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 15\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      className: \"email-input\",\n      value: this.state.email,\n      onChange: e => this.setState({\n        email: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      className: \"password-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 15\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"email-input\",\n      value: this.state.password,\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"contact\",\n      className: \"contact-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 15\n      }\n    }, \"Contact\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PhoneInput, {\n      country: this.state.country,\n      value: this.state.phone,\n      onChange: phone => this.setState({\n        phone\n      }),\n      inputStyle: {\n        width: \"100% !important\"\n      },\n      inputClass: \"signup-contact\",\n      countryCodeEditable: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"signinerr\",\n      className: \"signinerr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 15\n      }\n    }, \"You appear to already have an account.\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"create-acc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 15\n      }\n    }, \"Get Started\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"infodiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }\n    }, \"Already have an account?\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"log-in-link\",\n      onClick: () => {\n        alert(\"Redirect to Login Page\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 15\n      }\n    }, \"Sign In\"))) : /*#__PURE__*/React.createElement(VerifyEmail, {\n      email: this.state.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\nexport default SignUpStudent;","map":{"version":3,"sources":["/Users/godambe/dhruv1584/internships/scholarly-science-akhil2/src/components/signup/SignUpStudent.js"],"names":["React","useState","signUp","VerifyEmail","Route","GoogleLogin","PhoneInput","Dashboard","authenticate","isAuth","axios","Redirect","SignUpStudent","Component","constructor","props","state","fullName","email","password","phone","country","signedup","handleSubmit","bind","checkcountry","componentWillMount","localStorage","getItem","window","location","replace","readls","JSON","parse","setState","componentDidMount","e","preventDefault","console","log","user","res","googleresponse","Name","profileObj","name","token","googleId","ProviderId","post","then","result","responseJson","sessionStorage","setItem","stringify","history","push","cc","fetch","json","country_code","toLowerCase","render","responseGoogle","response","signup","marginTop","linkedin","marginRight","target","value","width","alert"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n// import axios from \"axios\";\nimport { signUp } from \"../backend/apiconnector\";\nimport VerifyEmail from \"./VerifyEmail\";\nimport { Route } from \"react-router-dom\";\nimport \"./signup.css\";\nimport google from \"../../assets/icons8-google.svg\";\nimport GoogleLogin from \"react-google-login\";\nimport linkedin from \"../../assets/icons8-linkedin.svg\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { Dashboard } from \"../dashboard/Dashboard\";\n\nimport { authenticate, isAuth } from \"../../helpers/auth\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nexport class SignUpStudent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullName: \"\",\n      email: \"\",\n      password: \"\",\n      phone: \"\",\n      country: \"us\",\n      signedup: false,\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.checkcountry = this.checkcountry.bind(this);\n  }\n  componentWillMount() {\n    if (localStorage.getItem(\"student-nation.com-tokens\")) {\n      window.location.replace(\"/dashboard/profile\");\n    }\n    if (window.localStorage.getItem(\"student-nation.com-activation\")) {\n      var readls = JSON.parse(\n        window.localStorage.getItem(\"student-nation.com-activation\")\n      );\n      this.setState({ email: readls.email, signedup: true });\n    }\n  }\n  componentDidMount() {\n    this.checkcountry();\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n    console.log(this.state);\n    var user = {\n      fullName: this.state.fullName,\n      phone: this.state.phone,\n      email: this.state.email,\n      password: this.state.password,\n    };\n    signUp = (res) => {\n      // .then((data) => {\n      //   if (data.status === \"success\") {\n      //     window.localStorage.setItem(\n      //       \"student-nation.com-activation\",\n      //       JSON.stringify({\n      //         email: this.state.email,\n      //         hash: data.tokenhash,\n      //         verified: false,\n      //       })\n      //     );\n      //     this.setState({ signedup: true });\n      //   } else {\n      //     document.getElementById(\"signinerr\").style.display = \"block\";\n      //   }\n      // })\n      const googleresponse = {\n        Name: res.profileObj.name,\n        email: res.profileObj.email,\n        token: res.googleId,\n\n        ProviderId: \"Google\",\n      };\n\n      debugger;\n      axios\n        .post(\"http://localhost:5000/api/register\", googleresponse)\n        .then((result) => {\n          let responseJson = result;\n          sessionStorage.setItem(\"userData\", JSON.stringify(result));\n          this.props.history.push(\"/dashboard\");\n        });\n    };\n    // .catch((err) => {});\n\n    // axios.post(`http://localhost:5000/auth/register`,{\n    //     firstName: this.state.firstName,\n    //     lastName: this.state.lastName,\n    //     phone: this.state.phone,\n    //     email: this.state.email,\n    //     password: this.state.password\n    // }).then(res => {\n    //   if(res.data.status === 'success'){\n    //     window.localStorage.setItem(\"scholarlyscience.in-activation\", JSON.stringify({\n    //       email: this.state.email,\n    //       hash: res.data.tokenhash,\n    //       verified: false\n    //     }))\n    //     this.setState({signedup: true})\n    //   }else alert(\"failed\")\n    // }).catch(err => {\n    //   if(err.response.data.error.message==='User Exists'){\n    //     alert('Email Already in Use')\n    //   }\n    // })\n  }\n  checkcountry() {\n    var cc = \"us\";\n    fetch(\"https://geolocation-db.com/json/\")\n      .then((res) => res.json())\n      .then((result) => {\n        cc = result.country_code.toLowerCase();\n        this.setState({ country: cc });\n      });\n  }\n  render() {\n    const responseGoogle = (response) => {\n      console.log(response);\n      if (response) {\n        return <Redirect to=\"/dashboard\" />;\n      }\n      var res = response.profileObj;\n      console.log(res);\n      debugger;\n      this.signup(response);\n    };\n\n    return (\n      <div className=\"main\">\n        {isAuth() ? <Redirect to=\"/dasboard/homecomponent\" /> : null}\n        <div className=\"main_banner\"></div>\n        {!this.state.signedup ? (\n          <div className=\"container\">\n            <div className=\"signup-title\">Sign up</div>\n            <div className=\"with-google\">\n              <GoogleLogin\n                clientId=\"109921130585-au2musc9k240m8e0n55eo4bjecoshd44.apps.googleusercontent.com\"\n                buttonText=\"Sign up with Google\"\n                onSuccess={responseGoogle}\n                onFailure={responseGoogle}\n                cookiePolicy={\"single_host_origin\"}\n                height=\"25\"\n                width=\"25\"\n                style={{ marginTop: \"0.5rem\" }}\n              />\n            </div>\n            <div className=\"with-linkedin\">\n              <span>\n                <img\n                  src={linkedin}\n                  alt=\"linkedin\"\n                  height=\"25\"\n                  width=\"25\"\n                  style={{ marginTop: \"0.5rem\", marginRight: \"0.2rem\" }}\n                />\n              </span>\n              <span>Sign up with LinkedIn</span>\n            </div>\n            <div className=\"with-email\">\n              <span>or sign up with email</span>\n            </div>\n\n            <form onSubmit={this.handleSubmit}>\n              {/* <label htmlFor=\"firstname\" className=\"first-label\">\n                First Name\n              </label>\n              <div>\n                <input\n                  type=\"text\"\n                  className=\"email-input\"\n                  value={this.state.firstName}\n                  onChange={(e) => this.setState({ firstName: e.target.value })}\n                />\n              </div>\n              <label htmlFor=\"lastname\" className=\"last-label\">\n                Last Name\n              </label>\n              <div>\n                <input\n                  type=\"text\"\n                  className=\"email-input\"\n                  value={this.state.lastName}\n                  onChange={(e) => this.setState({ lastName: e.target.value })}\n                />\n              </div> */}\n              <label htmlFor=\"fullname\" className=\"first-label\">\n                Full Name\n              </label>\n              <div>\n                <input\n                  type=\"text\"\n                  className=\"email-input\"\n                  value={this.state.fullName}\n                  onChange={(e) => this.setState({ fullName: e.target.value })}\n                />\n              </div>\n              <label htmlFor=\"email\" className=\"email-label\">\n                Email\n              </label>\n              <div>\n                <input\n                  type=\"email\"\n                  className=\"email-input\"\n                  value={this.state.email}\n                  onChange={(e) => this.setState({ email: e.target.value })}\n                />\n              </div>\n              <label htmlFor=\"password\" className=\"password-label\">\n                Password\n              </label>\n              <div>\n                <input\n                  type=\"password\"\n                  className=\"email-input\"\n                  value={this.state.password}\n                  onChange={(e) => this.setState({ password: e.target.value })}\n                />\n              </div>\n              <label htmlFor=\"contact\" className=\"contact-label\">\n                Contact\n              </label>\n              <div>\n                <PhoneInput\n                  country={this.state.country}\n                  value={this.state.phone}\n                  onChange={(phone) => this.setState({ phone })}\n                  inputStyle={{ width: \"100% !important\" }}\n                  inputClass=\"signup-contact\"\n                  countryCodeEditable={false}\n                />\n              </div>\n              <div id=\"signinerr\" className=\"signinerr\">\n                You appear to already have an account.\n              </div>\n              <button className=\"create-acc\">Get Started</button>\n            </form>\n            <div className=\"infodiv\">\n              Already have an account?{\" \"}\n              <span\n                className=\"log-in-link\"\n                onClick={() => {\n                  alert(\"Redirect to Login Page\");\n                }}\n              >\n                Sign In\n              </span>\n            </div>\n          </div>\n        ) : (\n          <VerifyEmail email={this.state.email} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default SignUpStudent;\n"]},"metadata":{},"sourceType":"module"}