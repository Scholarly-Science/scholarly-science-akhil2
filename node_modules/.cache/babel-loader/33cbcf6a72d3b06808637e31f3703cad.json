{"ast":null,"code":"var _jsxFileName = \"/Users/godambe/dhruv1584/internships/scholarly-science-akhil/src/components/dashboard/Assessment/Assessment__Body/Assessment__Body.js\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport \"./Assessment__Body.css\";\nimport axios from \"../axios\";\nimport VideocamOutlinedIcon from \"@material-ui/icons/VideocamOutlined\";\nimport MicNoneOutlinedIcon from \"@material-ui/icons/MicNoneOutlined\";\nimport PhotoOutlinedIcon from \"@material-ui/icons/PhotoOutlined\";\nimport AssignmentOutlinedIcon from \"@material-ui/icons/AssignmentOutlined\";\nimport { Link, useParams } from \"react-router-dom\";\nimport TitleIcon from \"@material-ui/icons/Title\";\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport { Select, MenuItem, InputLabel, FormControl, IconButton } from \"@material-ui/core\";\n\nfunction Assessment__Body() {\n  const [questions, setQuestions] = useState([]);\n  const [question, setQuestion] = useState(\"\");\n  const [questionType, setQuestionType] = useState(\"Choose Question type\");\n  const [inputList, setInputList] = useState([{\n    answer: \"\",\n    points: \"\"\n  }]);\n  const {\n    id\n  } = useParams();\n  const [selectedFile, setSelectedFile] = useState(null);\n  useEffect(() => {\n    axios.get(\"/questions\").then(response => {\n      setQuestions(response.data);\n    });\n  }, [questions]);\n  const selectedQuestion = questions.filter(item => item._id === id);\n  const selectedQuestionIndex = questions.findIndex(item => item._id === id); // const selectedQuestionID = selectedQuestion.map((item) => item._id);\n\n  const selectedQn = selectedQuestion.map(item => item.question);\n\n  const handleQuestionChange = e => {\n    e.preventDefault();\n    setQuestion(e.target.value);\n  };\n\n  const handleTypeChange = e => {\n    e.preventDefault();\n    setQuestionType(e.target.value);\n  };\n\n  const handleSubmit = id => {\n    const qn = {\n      id: id,\n      question: question,\n      questionType: questionType\n    };\n    axios.post(\"/question/update\", qn).then(response => {\n      console.log(response);\n      setQuestion(\"\");\n    });\n  }; // handle input change\n\n\n  const handleInputChange = (e, index) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const list = [...inputList];\n    list[index][name] = value;\n    setInputList(list);\n  }; // handle click event of the Remove button\n\n\n  const handleRemoveClick = index => {\n    const list = [...inputList];\n    list.splice(index, 1);\n    setInputList(list);\n  }; // handle click event of the Add button\n\n\n  const handleAddClick = () => {\n    inputList.length < 5 && setInputList([...inputList, {\n      answer: \"\",\n      points: \"\"\n    }]);\n  };\n\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"assessment__body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"assessment__bodyContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"assessment__bodyHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"Question \", selectedQuestionIndex + 1, \" of \", questions.length, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Write your question here ...\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"assessment__textArea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"textarea\",\n    rows: \"10\",\n    cols: \"100\",\n    placeholder: selectedQn,\n    value: question,\n    onChange: handleQuestionChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"assessment__textAreaOptions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"characters__remaining\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"1524 characters remaining\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"textArea__icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    accept: \"image/*\",\n    id: \"icon-button-photo\",\n    type: \"file\",\n    style: {\n      display: \"none\"\n    },\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"icon-button-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: \"upload-icon\",\n    color: \"primary\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(PhotoOutlinedIcon, {\n    className: \"textArea__icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    accept: \"video/*\",\n    id: \"icon-button-video\",\n    type: \"file\",\n    style: {\n      display: \"none\"\n    },\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"icon-button-video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: \"upload-icon\",\n    color: \"primary\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(VideocamOutlinedIcon, {\n    className: \"textArea__icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    accept: \"audio/*\",\n    id: \"icon-button-audio\",\n    type: \"file\",\n    style: {\n      display: \"none\"\n    },\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"icon-button-audio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: \"upload-icon\",\n    color: \"primary\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(MicNoneOutlinedIcon, {\n    className: \"textArea__icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    accept: \".xlsx,.xls,.doc, .docx,.ppt, .pptx,.txt,.pdf\",\n    id: \"icon-button-doc\",\n    type: \"file\",\n    style: {\n      display: \"none\"\n    },\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"icon-button-doc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: \"upload-icon\",\n    color: \"primary\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(AssignmentOutlinedIcon, {\n    className: \"textArea__icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }))))))), /*#__PURE__*/React.createElement(FormControl, {\n    className: \"select-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-controlled-open-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, \"Choose Question type\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-controlled-open-select-label\",\n    id: \"demo-controlled-open-select\",\n    className: \"dropbtn\",\n    value: questionType,\n    onChange: handleTypeChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Multiple Choice\",\n    selected: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"option-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormatListBulletedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }), \"Multiple Choice\")), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"option-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(VideocamOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }), \"Video\")), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Audio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"option-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MicNoneOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }), \"Audio\")), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"option-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TitleIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }), \"Text\")))), questionType === \"Multiple Choice\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }, inputList.map((x, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mcqInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \" mcq-input\",\n      name: \"answer\",\n      placeholder: \"Answer\",\n      value: x.answer,\n      onChange: e => handleInputChange(e, i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"mcq-input\",\n      name: \"points\",\n      placeholder: \"Points\",\n      value: x.points,\n      onChange: e => handleInputChange(e, i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 21\n      }\n    }), inputList.length !== 1 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cancelbtn\",\n      onClick: () => handleRemoveClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(CancelIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 19\n      }\n    }, inputList.length - 1 === i && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputbtn\",\n      onClick: handleAddClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 25\n      }\n    }), \" Add answer(5 max)\")));\n  })) : null, selectedQuestion.map(item => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"saveChanges\",\n    onClick: () => handleSubmit(item._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, \"Save Changes\")))));\n}\n\nexport default Assessment__Body;","map":{"version":3,"sources":["/Users/godambe/dhruv1584/internships/scholarly-science-akhil/src/components/dashboard/Assessment/Assessment__Body/Assessment__Body.js"],"names":["React","useCallback","useEffect","useState","axios","VideocamOutlinedIcon","MicNoneOutlinedIcon","PhotoOutlinedIcon","AssignmentOutlinedIcon","Link","useParams","TitleIcon","FormatListBulletedIcon","AddIcon","CancelIcon","Select","MenuItem","InputLabel","FormControl","IconButton","Assessment__Body","questions","setQuestions","question","setQuestion","questionType","setQuestionType","inputList","setInputList","answer","points","id","selectedFile","setSelectedFile","get","then","response","data","selectedQuestion","filter","item","_id","selectedQuestionIndex","findIndex","selectedQn","map","handleQuestionChange","e","preventDefault","target","value","handleTypeChange","handleSubmit","qn","post","console","log","handleInputChange","index","name","list","handleRemoveClick","splice","handleAddClick","length","handleFileChange","files","display","x","i"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport \"./Assessment__Body.css\";\nimport axios from \"../axios\";\n\nimport VideocamOutlinedIcon from \"@material-ui/icons/VideocamOutlined\";\nimport MicNoneOutlinedIcon from \"@material-ui/icons/MicNoneOutlined\";\nimport PhotoOutlinedIcon from \"@material-ui/icons/PhotoOutlined\";\nimport AssignmentOutlinedIcon from \"@material-ui/icons/AssignmentOutlined\";\nimport { Link, useParams } from \"react-router-dom\";\nimport TitleIcon from \"@material-ui/icons/Title\";\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport {\n  Select,\n  MenuItem,\n  InputLabel,\n  FormControl,\n  IconButton,\n} from \"@material-ui/core\";\n\nfunction Assessment__Body() {\n  const [questions, setQuestions] = useState([]);\n  const [question, setQuestion] = useState(\"\");\n  const [questionType, setQuestionType] = useState(\"Choose Question type\");\n\n  const [inputList, setInputList] = useState([{ answer: \"\", points: \"\" }]);\n  const { id } = useParams();\n\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  useEffect(() => {\n    axios.get(\"/questions\").then((response) => {\n      setQuestions(response.data);\n    });\n  }, [questions]);\n\n  const selectedQuestion = questions.filter((item) => item._id === id);\n  const selectedQuestionIndex = questions.findIndex((item) => item._id === id);\n\n  // const selectedQuestionID = selectedQuestion.map((item) => item._id);\n  const selectedQn = selectedQuestion.map((item) => item.question);\n\n  const handleQuestionChange = (e) => {\n    e.preventDefault();\n    setQuestion(e.target.value);\n  };\n\n  const handleTypeChange = (e) => {\n    e.preventDefault();\n    setQuestionType(e.target.value);\n  };\n\n  const handleSubmit = (id) => {\n    const qn = {\n      id: id,\n      question: question,\n      questionType: questionType,\n    };\n    axios.post(\"/question/update\", qn).then((response) => {\n      console.log(response);\n      setQuestion(\"\");\n    });\n  };\n\n  // handle input change\n  const handleInputChange = (e, index) => {\n    const { name, value } = e.target;\n    const list = [...inputList];\n    list[index][name] = value;\n    setInputList(list);\n  };\n\n  // handle click event of the Remove button\n  const handleRemoveClick = (index) => {\n    const list = [...inputList];\n    list.splice(index, 1);\n    setInputList(list);\n  };\n\n  // handle click event of the Add button\n  const handleAddClick = () => {\n    inputList.length < 5 &&\n      setInputList([...inputList, { answer: \"\", points: \"\" }]);\n  };\n\n  const handleFileChange = (e) => {\n    setSelectedFile(e.target.files[0]);\n  };\n\n  return (\n    <div className=\"assessment__body\">\n      <div className=\"assessment__bodyContainer\">\n        <div className=\"assessment__bodyHeader\">\n          Question {selectedQuestionIndex + 1} of {questions.length}{\" \"}\n          <span>Write your question here ...</span>\n        </div>\n        <div className=\"assessment__textArea\">\n          <textarea\n            className=\"textarea\"\n            rows=\"10\"\n            cols=\"100\"\n            placeholder={selectedQn}\n            value={question}\n            onChange={handleQuestionChange}\n          />\n          <div className=\"assessment__textAreaOptions\">\n            <div className=\"characters__remaining\">\n              1524 characters remaining\n            </div>\n            <div className=\"textArea__icons\">\n              <div className=\"upload-input-container\">\n                <input\n                  accept=\"image/*\"\n                  id=\"icon-button-photo\"\n                  type=\"file\"\n                  style={{ display: \"none\" }}\n                  multiple\n                />\n                <label htmlFor=\"icon-button-photo\">\n                  <IconButton\n                    className=\"upload-icon\"\n                    color=\"primary\"\n                    component=\"span\"\n                  >\n                    <PhotoOutlinedIcon className=\"textArea__icon\" />\n                  </IconButton>\n                </label>\n              </div>\n\n              <div className=\"upload-input-container\">\n                <input\n                  accept=\"video/*\"\n                  id=\"icon-button-video\"\n                  type=\"file\"\n                  style={{ display: \"none\" }}\n                  multiple\n                />\n                <label htmlFor=\"icon-button-video\">\n                  <IconButton\n                    className=\"upload-icon\"\n                    color=\"primary\"\n                    component=\"span\"\n                  >\n                    <VideocamOutlinedIcon className=\"textArea__icon\" />\n                  </IconButton>\n                </label>\n              </div>\n\n              <div className=\"upload-input-container\">\n                <input\n                  accept=\"audio/*\"\n                  id=\"icon-button-audio\"\n                  type=\"file\"\n                  style={{ display: \"none\" }}\n                  multiple\n                />\n                <label htmlFor=\"icon-button-audio\">\n                  <IconButton\n                    className=\"upload-icon\"\n                    color=\"primary\"\n                    component=\"span\"\n                  >\n                    <MicNoneOutlinedIcon className=\"textArea__icon\" />\n                  </IconButton>\n                </label>\n              </div>\n\n              <div className=\"upload-input-container\">\n                <input\n                  accept=\".xlsx,.xls,.doc, .docx,.ppt, .pptx,.txt,.pdf\"\n                  id=\"icon-button-doc\"\n                  type=\"file\"\n                  style={{ display: \"none\" }}\n                  multiple\n                />\n                <label htmlFor=\"icon-button-doc\">\n                  <IconButton\n                    className=\"upload-icon\"\n                    color=\"primary\"\n                    component=\"span\"\n                  >\n                    <AssignmentOutlinedIcon className=\"textArea__icon\" />\n                  </IconButton>\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <FormControl className=\"select-form\">\n          <InputLabel id=\"demo-controlled-open-select\">\n            Choose Question type\n          </InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            className=\"dropbtn\"\n            value={questionType}\n            onChange={handleTypeChange}\n          >\n            <MenuItem value=\"Multiple Choice\" selected>\n              <div className=\"option-item\">\n                <FormatListBulletedIcon />\n                Multiple Choice\n              </div>\n            </MenuItem>\n            <MenuItem value=\"Video\">\n              <div className=\"option-item\">\n                <VideocamOutlinedIcon />\n                Video\n              </div>\n            </MenuItem>\n            <MenuItem value=\"Audio\">\n              <div className=\"option-item\">\n                <MicNoneOutlinedIcon />\n                Audio\n              </div>\n            </MenuItem>\n            <MenuItem value=\"Text\">\n              <div className=\"option-item\">\n                <TitleIcon />\n                Text\n              </div>\n            </MenuItem>\n          </Select>\n        </FormControl>\n\n        {questionType === \"Multiple Choice\" ? (\n          <div>\n            {inputList.map((x, i) => {\n              return (\n                <div className=\"box\">\n                  <div className=\"mcqInput\">\n                    <input\n                      className=\" mcq-input\"\n                      name=\"answer\"\n                      placeholder=\"Answer\"\n                      value={x.answer}\n                      onChange={(e) => handleInputChange(e, i)}\n                    />\n                    <input\n                      className=\"mcq-input\"\n                      name=\"points\"\n                      placeholder=\"Points\"\n                      value={x.points}\n                      onChange={(e) => handleInputChange(e, i)}\n                    />\n\n                    {inputList.length !== 1 && (\n                      <div\n                        className=\"cancelbtn\"\n                        onClick={() => handleRemoveClick(i)}\n                      >\n                        <CancelIcon />\n                      </div>\n                    )}\n                  </div>\n                  <div>\n                    {inputList.length - 1 === i && (\n                      <div className=\"inputbtn\" onClick={handleAddClick}>\n                        <AddIcon /> Add answer(5 max)\n                      </div>\n                    )}\n                  </div>\n                </div>\n              );\n            })}\n\n            {/* <div style={{ marginTop: 20 }}>{JSON.stringify(inputList)}</div> */}\n          </div>\n        ) : null}\n        {selectedQuestion.map((item) => (\n          <div>\n            <button\n              className=\"saveChanges\"\n              onClick={() => handleSubmit(item._id)}\n            >\n              Save Changes\n            </button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Assessment__Body;\n"]},"metadata":{},"sourceType":"module"}