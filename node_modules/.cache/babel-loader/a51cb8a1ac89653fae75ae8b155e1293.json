{"ast":null,"code":"import { API } from \"./index.js\";\nexport const getAllCompanies = async (page, selectedFilter) => {\n  try {\n    const reqbody = {\n      filter: selectedFilter\n    };\n    const response = await fetch(`${API}/company/all`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(reqbody)\n    });\n    return response.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\nexport const getCompany = async id => {\n  try {\n    const response = await fetch(`${API}/company/get`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        id: id\n      })\n    });\n    return response.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\nexport const getProfile = async email => {\n  try {\n    var tokens = JSON.parse(localStorage.getItem(\"student-nation.com-tokens\"));\n    const response = await fetch(`${API}/auth/getprofile`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Basic ${tokens.accessToken}`,\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email\n      })\n    });\n    return response.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\nexport const updateProfile = async profile => {\n  try {\n    var tokens = JSON.parse(localStorage.getItem(\"student-nation.com-tokens\"));\n    const response = await fetch(`${API}/auth/updateprofile`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Basic ${tokens.accessToken}`,\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        profile\n      })\n    });\n    return response.json();\n  } catch (error) {\n    return console.log(error);\n  }\n};\nexport const signUp = async user => {\n  try {\n    const response = await fetch(`${API}/auth/register`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        fullName: user.fullName,\n        phone: user.phone,\n        email: user.email,\n        password: user.password\n      })\n    });\n    return response.json();\n  } catch (error) {\n    return JSON.stringify(error);\n  }\n};\nexport const verifyEmail = async token => {\n  try {\n    const response = await fetch(`${API}/auth/verifyaccount`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        token: token\n      })\n    });\n    return response.json();\n  } catch (error) {\n    return console.log(error);\n  }\n};\nexport const resendEmail = async email => {\n  try {\n    const response = await fetch(`${API}/auth/resendemail`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email\n      })\n    });\n    return response.json();\n  } catch (error) {\n    return console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/godambe/dhruv1584/internships/scholarly-science-akhil/src/components/backend/apiconnector.js"],"names":["API","getAllCompanies","page","selectedFilter","reqbody","filter","response","fetch","method","headers","Accept","body","JSON","stringify","json","err","console","log","getCompany","id","getProfile","email","tokens","parse","localStorage","getItem","Authorization","accessToken","updateProfile","profile","error","signUp","user","fullName","phone","password","verifyEmail","token","resendEmail"],"mappings":"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","sourcesContent":["import { API } from \"./index.js\";\n\nexport const getAllCompanies = async (page, selectedFilter) => {\n  try {\n    const reqbody = { filter: selectedFilter };\n    const response = await fetch(`${API}/company/all`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify(reqbody),\n    });\n    return response.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\n\nexport const getCompany = async (id) => {\n  try {\n    const response = await fetch(`${API}/company/get`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({ id: id }),\n    });\n    return response.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\n\nexport const getProfile = async (email) => {\n  try {\n    var tokens = JSON.parse(localStorage.getItem(\"student-nation.com-tokens\"));\n    const response = await fetch(`${API}/auth/getprofile`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Basic ${tokens.accessToken}`,\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({ email }),\n    });\n    return response.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\n\nexport const updateProfile = async (profile) => {\n  try {\n    var tokens = JSON.parse(localStorage.getItem(\"student-nation.com-tokens\"));\n    const response = await fetch(`${API}/auth/updateprofile`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Basic ${tokens.accessToken}`,\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({ profile }),\n    });\n    return response.json();\n  } catch (error) {\n    return console.log(error);\n  }\n};\n\nexport const signUp = async (user) => {\n  try {\n    const response = await fetch(`${API}/auth/register`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        fullName: user.fullName,\n        phone: user.phone,\n        email: user.email,\n        password: user.password,\n      }),\n    });\n    return response.json();\n  } catch (error) {\n    return JSON.stringify(error);\n  }\n};\n\nexport const verifyEmail = async (token) => {\n  try {\n    const response = await fetch(`${API}/auth/verifyaccount`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: token,\n      }),\n    });\n    return response.json();\n  } catch (error) {\n    return console.log(error);\n  }\n};\n\nexport const resendEmail = async (email) => {\n  try {\n    const response = await fetch(`${API}/auth/resendemail`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({ email }),\n    });\n    return response.json();\n  } catch (error) {\n    return console.log(error);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}