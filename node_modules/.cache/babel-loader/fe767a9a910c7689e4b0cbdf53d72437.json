{"ast":null,"code":"var _jsxFileName = \"/Users/godambe/dhruv1584/internships/scholarly-science-akhil2/src/components/dashboard/Card.js\";\nimport React from \"react\";\nimport \"./card.css\";\nimport google from \"../../assets/icons8-google.svg\";\nimport SkeletonLoader from \"tiny-skeleton-loader-react\";\nimport { useState, useEffect } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport Landing from \"./CompanyDetail\";\nexport const Card = ({\n  comp,\n  loc\n}) => {\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  });\n\n  const displaylocation = company => {\n    if (company === undefined) return \"\";\n    const {\n      city,\n      state,\n      country\n    } = company;\n    if (!state) return city + \", \" + country;\n    if (!city) return state + \", \" + country;\n    return city + \", \" + state;\n  };\n\n  const loadContent = () => {\n    const findlocindex = (filter, locarr) => {\n      for (let i = 0; i < locarr.length; i++) {\n        if (locarr[i].country === filter) {\n          return locarr[i];\n        }\n      }\n\n      return locarr[0];\n    };\n\n    const location = JSON.stringify(displaylocation(findlocindex(loc, comp.locations)));\n\n    if (loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(SkeletonLoader, {\n        width: \"75px\",\n        height: \"75px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"main-detail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"comp-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(SkeletonLoader, {\n        height: \"30px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"location\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(SkeletonLoader, {\n        height: \"1.5625rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"people\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(SkeletonLoader, {\n        height: \"1.4375rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"no-of-jobs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(SkeletonLoader, {\n        height: \"1.4375rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }\n      }))));\n    } else {\n      return /*#__PURE__*/React.createElement(Link, {\n        to: `/dashboard/company-detail/${comp._id}/${location}`,\n        style: {\n          textDecoration: \"none\",\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: comp.logo,\n        alt: \"\",\n        className: \"card-img\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"main-detail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"comp-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }\n      }, comp.name), loc === \"all\" && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"location\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 19\n        }\n      }, location.split('\"')[1]), loc !== \"all\" && comp.locations.map(location => {\n        // console.log('11', location)\n        if (location.city === loc || location.state === loc || location.country === loc) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"location\",\n            key: 'loc-' + comp._id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 30\n            }\n          }, displaylocation(location));\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"people\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }\n      }, comp.number_of_assignments, \" Assignment\", comp.number_of_assignments > 1 ? 's' : ''), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"no-of-jobs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, comp.openings > 1 ? `${comp.openings} Openings` : comp.openings === 1 ? '1 Opening' : 'Openings yet to be updated'))));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-container\",\n    key: comp._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 10\n    }\n  }, loadContent());\n};","map":{"version":3,"sources":["/Users/godambe/dhruv1584/internships/scholarly-science-akhil2/src/components/dashboard/Card.js"],"names":["React","SkeletonLoader","useState","useEffect","Redirect","Link","Landing","Card","comp","loc","loading","setLoading","setTimeout","displaylocation","company","undefined","city","state","country","loadContent","findlocindex","filter","locarr","i","length","location","JSON","stringify","locations","_id","textDecoration","color","logo","name","split","map","number_of_assignments","openings"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./card.css\";\nimport google from \"../../assets/icons8-google.svg\";\nimport SkeletonLoader from \"tiny-skeleton-loader-react\";\nimport { useState, useEffect } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport Landing from \"./CompanyDetail\";\nexport const Card = ({ comp, loc }) => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  });\n\n  const displaylocation = (company) => {\n    if(company === undefined) return \"\"\n    const { city, state, country } = company\n    if(!state) return city + \", \" + country\n    if(!city) return state + \", \" + country\n    return city + \", \" + state\n  }\n\n  const loadContent = () => {\n    const findlocindex = (filter, locarr) => {\n      for(let i=0; i<locarr.length; i++){\n        if(locarr[i].country === filter){\n          return locarr[i]\n        }\n      }\n      return locarr[0]\n    }\n    const location = JSON.stringify(displaylocation(findlocindex(loc, comp.locations)))\n\n    if (loading) {\n      return (\n        <div className=\"details\">\n          <SkeletonLoader width=\"75px\" height=\"75px\" />\n          <div className=\"main-detail\">\n            <div className=\"comp-name\">\n              <SkeletonLoader height=\"30px\" />\n            </div>\n            <div className=\"location\">\n              <SkeletonLoader height=\"1.5625rem\" />\n            </div>\n            <div className=\"people\">\n              <SkeletonLoader height=\"1.4375rem\" />\n            </div>\n            <div className=\"no-of-jobs\">\n              <SkeletonLoader height=\"1.4375rem\" />\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <Link\n          to={`/dashboard/company-detail/${comp._id}/${location}`}\n          style={{ textDecoration: \"none\", color: \"black\" }}\n        >\n          <div className=\"details\">\n            <img src={comp.logo} alt=\"\" className=\"card-img\" />\n            <div className=\"main-detail\">\n              <div className=\"comp-name\">{comp.name}</div>\n              {/* <div className=\"location\">{JSON.parse(location)}</div> */}\n              {/* {console.log(location.split('\"'))} */}\n              {loc === \"all\" && (\n                  <div className=\"location\">{location.split('\"')[1]}</div>\n              )}\n              {loc !== \"all\" && (\n                  comp.locations.map(location => {\n                    // console.log('11', location)\n                    if(location.city === loc || location.state === loc || location.country === loc) {\n                      return <div className=\"location\" key={'loc-' + comp._id}>{displaylocation(location)}</div>\n                    }\n                  })\n              )}\n\n              <div className=\"people\">{comp.number_of_assignments} Assignment{comp.number_of_assignments>1?'s':''}</div>\n                <div className=\"no-of-jobs\">{comp.openings>1?`${comp.openings} Openings`:comp.openings===1?'1 Opening':'Openings yet to be updated'}</div>\n            </div>\n          </div>\n        </Link>\n      );\n    }\n  };\n  return <div className=\"card-container\" key={comp._id}>{loadContent()}</div>;\n};\n"]},"metadata":{},"sourceType":"module"}